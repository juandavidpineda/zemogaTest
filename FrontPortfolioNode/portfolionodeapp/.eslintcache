[{"C:\\Users\\dpineda\\Documents\\z-Study\\FrontPortfolioNode\\portfolionodeapp\\src\\reportWebVitals.js":"1","C:\\Users\\dpineda\\Documents\\z-Study\\FrontPortfolioNode\\portfolionodeapp\\src\\App.js":"2","C:\\Users\\dpineda\\Documents\\z-Study\\FrontPortfolioNode\\portfolionodeapp\\src\\index.js":"3","C:\\Users\\dpineda\\Documents\\zemogaTest\\FrontPortfolioNode\\portfolionodeapp\\src\\App.js":"4","C:\\Users\\dpineda\\Documents\\zemogaTest\\FrontPortfolioNode\\portfolionodeapp\\src\\index.js":"5","C:\\Users\\dpineda\\Documents\\zemogaTest\\FrontPortfolioNode\\portfolionodeapp\\src\\reportWebVitals.js":"6"},{"size":362,"mtime":1607573332392,"results":"7","hashOfConfig":"8"},{"size":2546,"mtime":1607615473309,"results":"9","hashOfConfig":"8"},{"size":596,"mtime":1607573868753,"results":"10","hashOfConfig":"8"},{"size":2546,"mtime":1607615473309,"results":"11","hashOfConfig":"12"},{"size":596,"mtime":1607573868753,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1607573332392,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xclvv7",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"1f2dwg7",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dpineda\\Documents\\z-Study\\FrontPortfolioNode\\portfolionodeapp\\src\\reportWebVitals.js",[],"C:\\Users\\dpineda\\Documents\\z-Study\\FrontPortfolioNode\\portfolionodeapp\\src\\App.js",["28"],"C:\\Users\\dpineda\\Documents\\z-Study\\FrontPortfolioNode\\portfolionodeapp\\src\\index.js",[],"C:\\Users\\dpineda\\Documents\\zemogaTest\\FrontPortfolioNode\\portfolionodeapp\\src\\App.js",["29"],"import React from \"react\";\nimport {\n  SimpleGrid,\n  Flex,\n  Avatar,\n  Box,\n  Text,\n  Divider,\n  Stack,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [users, setUsers] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState();\n  React.useEffect(() => {\n    async function callService() {\n      const result = await getUsers();\n      setUsers(result.message);\n    }\n    callService();\n  }, []);\n\n  async function callServiceByUser(userName) {\n    const result = await getUserById(userName);\n    setCurrentUser(result.message);\n  }\n\n  return (\n    <Flex m={10}>\n      <SimpleGrid columns={1} spacing={5} w=\"300px\" h=\"100%\">\n        {users != undefined &&\n          users.map((user) => {\n            return (\n              <Stack\n                cursor=\"pointer\"\n                direction=\"column\"\n                onClick={() => {\n                  callServiceByUser(user.twitterUsername);\n                }}\n                key={user.twitterUsername}\n              >\n                <Divider orientation=\"horizontal\" />\n                <Text fontWeight=\"bold\">{user.title}</Text>\n                <Text fontSize=\"sm\">@{user.twitterUsername}</Text>\n              </Stack>\n            );\n          })}\n      </SimpleGrid>\n      <Flex flexDirection=\"column\" w=\"400px\">\n        {currentUser !== undefined && (\n          <Box>\n            <Text fontWeight=\"bold\">\n              {currentUser?.title} || @{currentUser?.twitterUsername}{\" \"}\n            </Text>\n            <Avatar size=\"2xl\" src={currentUser?.image} />\n            <Text fontSize=\"sm\">{currentUser?.textDescription}</Text>\n          </Box>\n        )}\n        {currentUser !== undefined &&\n          currentUser.tweets.length > 0 &&\n          currentUser.tweets.map((tweet) => {\n            return (\n              <Stack key={tweet.id} direction=\"column\">\n                <Divider orientation=\"horizontal\" />\n                <Text fontWeight=\"bold\">{tweet.text}</Text>\n                <Text fontSize=\"sm\">{tweet.created_at}</Text>\n              </Stack>\n            );\n          })}\n      </Flex>\n    </Flex>\n  );\n}\n\nfunction getUsers() {\n  return axios\n    .get(\n      \"https://biz5lq14e0.execute-api.us-east-1.amazonaws.com/dev/getAllUsers\"\n    )\n    .then(({ data }) => {\n      return data;\n    });\n}\n\nfunction getUserById(userName) {\n  return axios\n    .get(\n      `https://biz5lq14e0.execute-api.us-east-1.amazonaws.com/dev/getInfoUser/${userName}`\n    )\n    .then(({ data }) => {\n      return data;\n    });\n}\n\nexport default App;\n","C:\\Users\\dpineda\\Documents\\zemogaTest\\FrontPortfolioNode\\portfolionodeapp\\src\\index.js",[],"C:\\Users\\dpineda\\Documents\\zemogaTest\\FrontPortfolioNode\\portfolionodeapp\\src\\reportWebVitals.js",[],{"ruleId":"30","severity":1,"message":"31","line":32,"column":16,"nodeType":"32","messageId":"33","endLine":32,"endColumn":18},{"ruleId":"30","severity":1,"message":"31","line":32,"column":16,"nodeType":"32","messageId":"33","endLine":32,"endColumn":18},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]